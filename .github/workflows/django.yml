name: Python application

on: [push]


jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        postgres-version: ['14.9', '15']

    services:
      postgres:
        image: postgres:${{matrix.postgres-version}} 
        env:
          POSTGRES_USER: decide
          POSTGRES_PASSWORD: decide
          POSTGRES_DB: decide
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: psycopg2 prerequisites
        run: sudo apt-get install libpq-dev

      - name: Install dependencies and config
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install codacy-coverage
          cp decide/local_settings.gactions.py decide/local_settings.py

      - name: Crear Release en GitHub
        id: crear_release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          name: "Release ${{ github.ref_name }}"
          body: |
            ## Cambios en esta versi√≥n
            - Detalle de los cambios realizados.
          draft: false
          prerelease: false

      - name: Run migrations (unnecessary)
        run: |
          cd decide
          python manage.py migrate

      - name: Run tests
        run: |
          cd decide
          coverage run --branch --source=. ./manage.py test --keepdb
          coverage xml

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: decide/coverage.xml

  cobertura:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Download coverage report
        uses: actions/download-artifact@v3
        with:
          name: coverage-report

      - name: Codacy Coverage Reporter
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: decide/coverage.xml
